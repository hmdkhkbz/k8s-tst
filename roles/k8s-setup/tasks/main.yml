- name: Install required packages for the Kubernetes apt repository
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
    state: present
    update_cache: yes

- name: Ensure /etc/apt/keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
  # This needs to come before attempting to save files in this directory.

- name: Download the Kubernetes GPG key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
    dest: /tmp/kubernetes-release.key
    mode: '0644'

- name: Ensure /etc/apt/keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Import the Kubernetes GPG key
  ansible.builtin.command:
    cmd: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-release.key
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes apt repository
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /'
    create: yes
    state: present
  # This is correct; ensures idempotence by avoiding duplicate entries

- name: Update apt package index
  ansible.builtin.apt:
    update_cache: yes

- name: Install kubelet, kubeadm, and kubectl
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - kubelet
    - kubeadm
    - kubectl
  # Ensures these packages are installed


- name: Ensure kubelet service is enabled and started
  ansible.builtin.systemd:
    name: kubelet
    enabled: yes
    state: started
  # This correctly ensures that the kubelet service is enabled and started

- name: Hold kubelet, kubeadm, and kubectl at their current version
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

